题目描述
Given a binary tree, find its minimum depth.The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.


/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int run(TreeNode root) {
        if(root==null){
            return 0;
        }
        //必须两个都是null节点才能返回1
        if(root.left==null && root.right==null){
            return 1;
        }
      
        if(root.left==null){
            return 1+run(root.right);
        }
        if(root.right==null){
            return 1+run(root.left);
        }
        return Math.min(run(root.left),run(root.right))+1;
    }
}

另一种思路：
public class Solution {
    public int run(TreeNode root) {
        //层序遍历，找到首个节点的左右都是null的就返回
        if(root==null){
            return 0;
        }
        int depth=0;
        Queue<TreeNode> queue=new LinkedList<>();
        queue.offer(root);
        while(!queue.isEmpty()){
            int len=queue.size();
            depth++;
            for(int i=0;i<len;i++){
                TreeNode cur=queue.poll();
                if(cur.left==null && cur.right==null){
                    return depth;
                }
                if(cur.left!=null){
                    queue.offer(cur.left);
                }
                if(cur.right!=null){
                    queue.offer(cur.right);
                }
            }
        }
        return 0;
    }
}