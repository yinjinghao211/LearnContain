import java.util.*;
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<Integer> postorderTraversal(TreeNode root) {
        //后序遍历----左右中
        ArrayList<Integer> array = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        TreeNode p = root;
        TreeNode r = null; 
        while(p!=null || !stack.isEmpty())
        {
            if(p!=null){//一直存放左节点
                stack.push(p);
                p=p.left;
            }else{
                p=stack.peek();
                p=p.right;
                if(p!=null && p!=r){  //栈顶右孩子没有被访问过 && r记录是否此节点被访问过
                    stack.push(p);//右孩子进栈，重复左孩子一直进栈到值为空时
                    p=p.left;  //入栈条件
                }else{
                    p=stack.pop();
                    array.add(p.val);
                    r=p;
                    p=null;//结束上面的while循环
                }
            }
        }
        return array;
    }
}